# VERSION 0.0.1
# AUTHOR: Will Wong
# DESCRIPTION: Docker airflow with ECR registry and DooD (Docker outside of Dkr)
# BUILD: docker build --rm -t wongwill86/air-tasks .
# SOURCE: https://github.com/wongwill86/air-tasks

# Compile AWS credential helper
#FROM golang:1.8.3 as aws_ecr_credential_helper
#WORKDIR /go/src/github.com/awslabs/
#RUN git clone https://github.com/awslabs/amazon-ecr-credential-helper.git
#WORKDIR /go/src/github.com/awslabs/amazon-ecr-credential-helper
#RUN make

FROM python:3.6-alpine3.7
MAINTAINER wongwill86

ARG AIRFLOW_HOME=/usr/local/airflow
ARG AIRFLOW_VERSION=1.9.1
ENV AIRFLOW_HOME ${AIRFLOW_HOME}
ENV AIRFLOW_USER airflow
ARG DOCKER_VERSION=17.12.0-ce

USER root

RUN set -ex \
    && apk add --no-cache bash wget shadow \
    && apk add --no-cache --virtual .build-dependencies \
       build-base \
       python3-dev \
       postgresql-dev \
       libffi-dev \
       openblas-dev \
       libxslt-dev \
       libxml2-dev \
       linux-headers \
    && wget https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz \
    && tar -xvf docker-${DOCKER_VERSION}.tgz \
    && mv docker/* /usr/local/bin/ \
    && rm -rf docker docker-${DOCKER_VERSION}.tgz docker \
    && pip install apache-airflow[crypto,celery,postgres] celery
#RUN find /usr/local \
#        \( -type d -a -name test -o -name tests \) \
#        -o \( -type f -a -name '*.pyc' -o -name '*.pyo' \) \
#        -exec rm -rf '{}' + \
#    && runDeps="$( \
#        scanelf --needed --nobanner --recursive /usr/local \
#                | awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' \
#                | sort -u \
#                | xargs -r apk info --installed \
#                | sort -u \
#    )" \
#    && apk add --virtual .run-dependencies $runDeps \
#    && apk del .build-dependencies

RUN delgroup ping
RUN addgroup -g 999 docker
